apiVersion: v1
kind: ServiceAccount
metadata:
  name: xbenc-pythonprober
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: xbenc-pythonprober
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 7000
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xbenc-pythonprober
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pythonprober
      app.kubernetes.io/instance: xbenc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pythonprober
        app.kubernetes.io/instance: xbenc
    spec:
      serviceAccountName: xbenc-pythonprober
      securityContext:
        {}
      containers:
        - name: pythonprober
          securityContext:
            {}
          image: "pythonprober:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-metrics
              containerPort: 7000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 7000
          readinessProbe:
            httpGet:
              path: /
              port: 7000
          resources:
            {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xbenc-pythonprober
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: "prober.vcap.me"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: xbenc-pythonprober
                port:
                  number: 80
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: xbenc-pythonprober
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pythonprober
      app.kubernetes.io/instance: xbenc
#  namespaceSelector:
    # matchNames:
    # - default
#    any: true
  endpoints:
  - port: http-metrics
    interval: 30s
---
apiVersion: v1
kind: Pod
metadata:
  name: "xbenc-pythonprober-test-connection"
  labels:
    helm.sh/chart: pythonprober-0.1.0
    app.kubernetes.io/name: pythonprober
    app.kubernetes.io/instance: xbenc
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['xbenc-pythonprober:80']
  restartPolicy: Never```
